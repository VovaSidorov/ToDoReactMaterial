{"ast":null,"code":"import _objectSpread from \"/home/vova/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/JS/19/remove1202/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/vova/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/JS/19/remove1202/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vova/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/JS/19/remove1202/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vova/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/JS/19/remove1202/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vova/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/JS/19/remove1202/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vova/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/JS/19/remove1202/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/vova/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/JS/19/remove1202/src/components/AddTask/index.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport connect from \"react-redux/es/connect/connect\";\nimport { bindActionCreators } from \"redux\";\nimport { addNewTask } from \"../../store/actions\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    container: {\n      justifyContent: \"center\"\n    },\n    paper: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'center'\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit\n    },\n    button: {\n      margin: theme.spacing.unit\n    },\n    form: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  };\n};\n\nvar AddTask =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddTask, _Component);\n\n  function AddTask() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddTask);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddTask)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      task: \"\"\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        task: e.target.value\n      });\n    };\n\n    _this.submitHandler = function (e, addNewTask) {\n      e.preventDefault();\n      console.log(\"submitHandler\", e.target[0].value);\n      addNewTask(_this.state.task);\n\n      _this.setState({\n        task: \"\"\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddTask, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      {\n        var _this$props = this.props,\n            classes = _this$props.classes,\n            _addNewTask = _this$props.addNewTask;\n        return React.createElement(\"div\", {\n          className: classes.root,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          spacing: 24,\n          className: classes.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          xs: 10,\n          sm: 8,\n          md: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(Paper, {\n          className: classes.paper,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: classes.form,\n          onSubmit: function onSubmit(event) {\n            _this2.submitHandler(event, _addNewTask);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          id: \"outlined-name\",\n          label: \"Enter new Task\",\n          className: classes.textField,\n          value: this.state.task,\n          onChange: this.handleChange,\n          margin: \"normal\",\n          variant: \"outlined\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }), React.createElement(Button, {\n          type: \"submit\",\n          variant: \"outlined\",\n          color: \"primary\",\n          className: classes.button,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"Add task\"))))));\n      }\n    }\n  }]);\n\n  return AddTask;\n}(Component);\n\nvar putStateToProps = function putStateToProps(state) {\n  return _objectSpread({}, state);\n};\n\nvar putActionsToComponent = function putActionsToComponent(dispatch) {\n  return {\n    addNewTask: bindActionCreators(addNewTask, dispatch)\n  };\n};\n\nexport default withStyles(styles)(connect(putStateToProps, putActionsToComponent)(AddTask));","map":{"version":3,"sources":["/home/vova/Рабочий стол/JS/19/remove1202/src/components/AddTask/index.js"],"names":["React","Component","withStyles","Grid","Paper","TextField","Button","connect","bindActionCreators","addNewTask","styles","theme","root","flexGrow","container","justifyContent","paper","padding","spacing","unit","textAlign","textField","marginLeft","marginRight","button","margin","form","display","alignItems","AddTask","state","task","handleChange","e","setState","target","value","submitHandler","preventDefault","console","log","props","classes","event","putStateToProps","putActionsToComponent","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport connect from \"react-redux/es/connect/connect\";\nimport {bindActionCreators} from \"redux\";\nimport {addNewTask} from \"../../store/actions\";\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    container: {\n        justifyContent: \"center\"\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'center',\n    },\n    textField:{\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    form: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    }\n});\n\nclass AddTask extends Component{\n\n    state = {\n        task: \"\"\n    };\n\n    render() {\n        {\n            const {classes,addNewTask} = this.props;\n            return (\n                <div className={classes.root}>\n                    <Grid container spacing={24} className={classes.container}>\n                        <Grid item xs={10} sm={8} md={6}>\n                            <Paper className={classes.paper}>\n                                <form className={classes.form} onSubmit={(event) => {\n                                    this.submitHandler(event, addNewTask)\n                                }}>\n                                    <TextField\n                                        id=\"outlined-name\"\n                                        label=\"Enter new Task\"\n                                        className={classes.textField}\n                                        value={this.state.task}\n                                        onChange={this.handleChange}\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                    />\n                                    <Button type=\"submit\" variant=\"outlined\" color=\"primary\" className={classes.button}>\n                                        Add task\n                                    </Button>\n                                </form>\n                            </Paper>\n\n                        </Grid>\n                    </Grid>\n                </div>\n            )\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            task: e.target.value\n        });\n    };\n\n    submitHandler = (e,addNewTask) => {\n        e.preventDefault();\n        console.log(\"submitHandler\",e.target[0].value);\n        addNewTask(this.state.task);\n        this.setState({\n            task: \"\"\n        });\n    };\n}\n\nconst putStateToProps = (state) => {\n    return {\n        ...state\n    }\n};\n\nconst putActionsToComponent = (dispatch) => {\n    return {\n        addNewTask: bindActionCreators(addNewTask,dispatch)\n    }\n};\n\nexport default withStyles(styles)(connect(\n    putStateToProps,\n    putActionsToComponent\n)(AddTask));"]},"metadata":{},"sourceType":"module"}